global:
  namespace: homework

  revision: hw6


deploy:


  configmap:
    name: webserver-config


  service:
    name: webserver
    type: ClusterIP
    port: 8000
    targetPort: 8000


  serviceAccount:
    create: true

    items:
    - name: cd
    - name: monitoring
      secrets:
      - name: monitoring


  rbacAuthorization:
  - name: monitoring
    type: ClusterRoleBinding
    saName: monitoring
    roleRef: monitoring

  - name: cd-admin
    type: RoleBinding
    saName: cd
    roleRef: admin

  - name: monitoring
    type: ClusterRole
    rules:
    - verbs:
      - get
      nonResourceURLs:
      - "/metrics"

  - name: admin
    type: Role
    rules:
    - apiGroups: ["*"]
      verbs: ["*"]
      resources: ["*"]


  secrets:
  - name: monitoring
    saName: monitoring


  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    #   # kubernetes.io/ingress.class: nginx
    #   # kubernetes.io/tls-acme: "true"
    hosts:
    - host: homework.otus
      paths:
      - path: /homepage(/|$)
        pathType: ImplementationSpecific
        serviceName: webserver
        servicePort: 8000
      - path: /
        pathType: Prefix
        serviceName: webserver
        servicePort: 8000
    tls: []
  #   #  - secretName: chart-example-tls
  # #    hosts:
  # #      - chart-example.local


  deployment:
    name: webserver
    replicas: 3
    portNumber: 8000

    imageName: busybox
    imagePullPolicy: IfNotPresent
    imageTag: ""

    strategy:
      type: rollingUpdate
      maxSurge: 1
      maxUnavailable: 1

    serviceAccount: monitoring
    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: homework
    #           operator: In
    #           values:
    #           - 'true'

    labels:
      app.kubernetes.io/instance: webserver
      app.kubernetes.io/name: webserver

    command: ['sh', '-c', 'ls -la /homework && /bin/httpd  -f -p 8000 -h /homework/']

    livenessProbe:
      tcpSocket:
        port: 8000
      initialDelaySeconds: 15
      periodSeconds: 10

    readinessProbe:
      httpGet:
        path: /index.html
        port: 8000

    resources:
      limits:
        cpu: 200m
        memory: 100Mi
      requests:
        cpu: 200m
        memory: 100Mi

    volumeMounts:
    - name: web-content
      mountPath: /homework
    - name: custom-volume
      mountPath: /homework/conf

    volumes:
    - name: web-content
      persistentVolumeClaim:
        claimName: webserver-pvc
    - name: custom-volume
      configMap:
        name: webserver

    lifecycle:
      preStop:
        exec:
          command: ["/bin/sh", "-c", "rm -f /homework/index.html"]


  storageClass:
    name: otus-sc
    provisioner: k8s.io/minikube-hostpath
    reclaimPolicy: Retain

  persistentVolumeClaim:
  - name: webserver-pvc
    storageClassName: "otus-sc"
    volumeMode: Filesystem
    accessModes: ReadWriteOnce
    resourcesReqStorage: 100Mi


